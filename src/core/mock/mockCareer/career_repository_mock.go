// Code generated by MockGen. DO NOT EDIT.
// Source: src/core/domain/userdm/career_repository.go

// Package mockCareer is a generated GoMock package.
package mockCareer

import (
	context "context"
	reflect "reflect"

	userdm "github.com/FUJI0130/curriculum/src/core/domain/userdm"
	gomock "github.com/golang/mock/gomock"
)

// MockCareerRepository is a mock of CareerRepository interface.
type MockCareerRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCareerRepositoryMockRecorder
}

// MockCareerRepositoryMockRecorder is the mock recorder for MockCareerRepository.
type MockCareerRepositoryMockRecorder struct {
	mock *MockCareerRepository
}

// NewMockCareerRepository creates a new mock instance.
func NewMockCareerRepository(ctrl *gomock.Controller) *MockCareerRepository {
	mock := &MockCareerRepository{ctrl: ctrl}
	mock.recorder = &MockCareerRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCareerRepository) EXPECT() *MockCareerRepositoryMockRecorder {
	return m.recorder
}

// FindByUserID mocks base method.
func (m *MockCareerRepository) FindByUserID(ctx context.Context, userID string) ([]*userdm.Careers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByUserID", ctx, userID)
	ret0, _ := ret[0].([]*userdm.Careers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByUserID indicates an expected call of FindByUserID.
func (mr *MockCareerRepositoryMockRecorder) FindByUserID(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByUserID", reflect.TypeOf((*MockCareerRepository)(nil).FindByUserID), ctx, userID)
}

// Store mocks base method.
func (m *MockCareerRepository) Store(ctx context.Context, career []*userdm.Careers) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", ctx, career)
	ret0, _ := ret[0].(error)
	return ret0
}

// Store indicates an expected call of Store.
func (mr *MockCareerRepositoryMockRecorder) Store(ctx, career interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockCareerRepository)(nil).Store), ctx, career)
}
